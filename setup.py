import pyautogui
import serial.tools.list_ports
import configparser

# ---------- Schritt 1: COM-Port w√§hlen ----------
ports = list(serial.tools.list_ports.comports())
print("\nüîå Angeschlossene serielle Ger√§te:")

if len(ports) == 0:
    print("‚ùå Keine seriellen Ger√§te gefunden. Abbruch.")
    exit(1)

for i, port in enumerate(ports):
    print(f"{i + 1}. {port.device} ‚Äì {port.description}")

selected = input("‚û°Ô∏è Nummer des Ports w√§hlen (z.‚ÄØB. 1): ")
try:
    port_index = int(selected) - 1
    selected_port = ports[port_index].device
except (ValueError, IndexError):
    print("‚ùå Ung√ºltige Auswahl. Abbruch.")
    exit(1)



# ---------- Schritt 2: Pixelposition und Farbe erfassen ----------
input("\nüñ±Ô∏è Bewege die Maus auf den roten Punkt im Teams-Icon und dr√ºcke ENTER...")
x, y = pyautogui.position()
color = pyautogui.pixel(x, y)
print(f"\nüìç Position: x={x}, y={y}")
print(f"üé® Farbe an dieser Position: RGB = {color}")

# ---------- Schritt 3: Konfiguration speichern ----------
config = configparser.ConfigParser()

config["USB"] = {
    "port": selected_port
}

config["PIXEL"] = {
    "pixelx": str(x),
    "pixely": str(y),
    "pixelcolor": f"{color[0]}, {color[1]}, {color[2]}",
    "pixeltolerance": "15"
}

with open("config.ini", "w") as configfile:
    config.write(configfile)

print("\n‚úÖ Konfiguration wurde erfolgreich in 'config.ini' gespeichert.")


"""import pyautogui
import serial.tools.list_ports

ports = serial.tools.list_ports.comports()

print("Angeschlossene serielle Ger√§te:")
for port in ports:
    print(f"‚Ä¢ {port.device} ‚Äì {port.description}")

input("Bewege die Maus auf den roten Punkt im Teams-Icon und dr√ºcke ENTER...")
x, y = pyautogui.position()
color = pyautogui.pixel(x, y)
print(f"Position erfasst: x={x}, y={y}")
print(f"Farbe an ({x}, {y}): RGB = {color}")
"""

